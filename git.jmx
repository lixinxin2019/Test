
<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.0 r1840935">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="风控准入" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">true</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="pass_asset_id" elementType="Argument">
            <stringProp name="Argument.name">pass_asset_id</stringProp>
            <stringProp name="Argument.value">c8a4b2ea7802407f885d54d70c5acfdd</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pass_product_code" elementType="Argument">
            <stringProp name="Argument.name">pass_product_code</stringProp>
            <stringProp name="Argument.value">LXXDSC20190306901</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pass_access_template_id" elementType="Argument">
            <stringProp name="Argument.name">pass_access_template_id</stringProp>
            <stringProp name="Argument.value">06e1e2b8de3f420f95c0607509081d31</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="fail_asset_id" elementType="Argument">
            <stringProp name="Argument.name">fail_asset_id</stringProp>
            <stringProp name="Argument.value">5ecdb12320b948ecbeb5e145be3a6796</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="fail_product_code" elementType="Argument">
            <stringProp name="Argument.name">fail_product_code</stringProp>
            <stringProp name="Argument.value">LXXDSC20190306902</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pass_vin_code" elementType="Argument">
            <stringProp name="Argument.name">pass_vin_code</stringProp>
            <stringProp name="Argument.value">Vincode20190122001</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="pass_cert_no" elementType="Argument">
            <stringProp name="Argument.name">pass_cert_no</stringProp>
            <stringProp name="Argument.value">37142520190129888X</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath">/Users/edz/Documents/jmeter/apache-jmeter-5.0/lib/mysql-connector-java-5.1.7-bin.jar</stringProp>
    </TestPlan>
    <hashTree>
      <JDBCDataSource guiclass="TestBeanGUI" testclass="JDBCDataSource" testname="连接MYSQL数据库" enabled="true">
        <boolProp name="autocommit">true</boolProp>
        <stringProp name="checkQuery">select 1</stringProp>
        <stringProp name="connectionAge">5000</stringProp>
        <stringProp name="dataSource">wdy_trunk</stringProp>
        <stringProp name="dbUrl">jdbc:mysql://wdy-test-sh.mysql.rds.aliyuncs.com:3306/wdy_trunk?allowMultiQueries=true</stringProp>
        <stringProp name="driver">com.mysql.jdbc.Driver</stringProp>
        <boolProp name="keepAlive">true</boolProp>
        <stringProp name="password">Wdy_Trunk</stringProp>
        <stringProp name="poolMax">10</stringProp>
        <stringProp name="timeout">10000</stringProp>
        <stringProp name="transactionIsolation">DEFAULT</stringProp>
        <stringProp name="trimInterval">60000</stringProp>
        <stringProp name="username">wdy_trunk</stringProp>
      </JDBCDataSource>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP请求默认值" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">kf-wdy-trunk.wjs-test.com/wdy</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">http</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP信息头管理器" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="" elementType="Header">
            <stringProp name="Header.name">x-auth-token</stringProp>
            <stringProp name="Header.value">${__P(x-auth-token,)}</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="察看结果树" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="登录后获取token" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="【登录】-账号zhangsan" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="username" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">zhangsan</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">username</stringProp>
              </elementProp>
              <elementProp name="password" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">123</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">password</stringProp>
              </elementProp>
              <elementProp name="d_code" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">${__Random(100000,999999,random)}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">d_code</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/api/usermanage/v1/login</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">false</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="正则表达式提取器token" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">true</stringProp>
            <stringProp name="RegexExtractor.refname">token</stringProp>
            <stringProp name="RegexExtractor.regex">x-auth-token: (.*)</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
            <boolProp name="RegexExtractor.default_empty_value">true</boolProp>
            <stringProp name="Scope.variable"></stringProp>
          </RegexExtractor>
          <hashTree/>
          <BeanShellPostProcessor guiclass="TestBeanGUI" testclass="BeanShellPostProcessor" testname="将token设置为全局变量" enabled="true">
            <boolProp name="resetInterpreter">false</boolProp>
            <stringProp name="parameters">${token}</stringProp>
            <stringProp name="filename"></stringProp>
            <stringProp name="script">String token = bsh.args[0];//把正则表达式提取的token写入变量token中

${__setProperty(x-auth-token,${token},)};//把变量token的值赋值给x-auth-token，并设置x-auth-token为全局变量</stringProp>
          </BeanShellPostProcessor>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【年龄区间】-通过" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【年龄区间】-获取该规则risk_rule_detail表的id" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT rrd.id FROM risk_rule_detail rrd
INNER JOIN risk_rule rr ON rrd.risk_rule_id = rr.id
INNER JOIN risk_rule_template rrt ON rr.risk_rule_template_id = rrt.id
WHERE rrt.id = &quot;${pass_access_template_id}&quot; AND rr.name = &quot;年龄区间&quot;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">risk_rule_detail_id</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【年龄区间】-重置risk_rule_detail表中该规则配置值" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Callable Statement</stringProp>
          <stringProp name="query">UPDATE risk_rule_detail SET operator = &quot;LESS_EQUAL&quot; ,numberic_target =50  WHERE id =&quot;${risk_rule_detail_id_1}&quot;;

UPDATE risk_rule_detail SET operator = &quot;GREATER_EQUAL&quot; ,numberic_target =20  WHERE id =&quot;${risk_rule_detail_id_2}&quot;;
</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【年龄区间】-准入通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${pass_product_code}&apos;;

UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${pass_product_code}&apos;;

UPDATE asset_base_info SET age = 30 WHERE id = &quot;${pass_asset_id}&quot;;





</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">断言失败时候输出&quot;断言失败&quot;</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${pass_asset_id}&quot; and name = &quot;年龄区间&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=PASS&quot;) ==-1 ||result.indexOf(&quot;description=年龄: [30], 符合准入标准.&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【年龄区间】-不通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【年龄区间】-准入不通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${fail_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${fail_product_code}&apos;;


UPDATE asset_base_info SET age = 66 WHERE id = &quot;${fail_asset_id}&quot;


</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${fail_asset_id}&quot; and name = &quot;年龄区间&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=FAIL&quot;) ==-1 ||result.indexOf(&quot;description=年龄: [66], 不符合准入标准.&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【不准入新能源车】-通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【不准入新能源车】-准入通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${pass_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${pass_product_code}&apos;;


UPDATE asset_car_core_info SET plate_number = &quot;桂AT825X&quot; WHERE asset_id = &quot;${pass_asset_id}&quot;;

</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${pass_asset_id}&quot; and name = &quot;不准入新能源车&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=PASS&quot;) ==-1 ||result.indexOf(&quot;description=车牌:[桂AT825X] 不为新能源车,准入通过&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	s
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【不准入新能源车】-不通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【不准入新能源车】-准入不通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${fail_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${fail_product_code}&apos;;


UPDATE asset_car_core_info SET plate_number = &quot;桂GAT825X&quot; WHERE asset_id = &quot;${fail_asset_id}&quot;;
</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${fail_asset_id}&quot; and name = &quot;不准入新能源车&quot;;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=FAIL&quot;) ==-1 ||result.indexOf(&quot;description=车牌:[桂GAT825X] 为新能源车,准入不通过&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	s
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【GPS供应商白名单】-通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【GPS供应商白名单】-准入通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${pass_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${pass_product_code}&apos;;


UPDATE asset_gps_info SET gps_org_name = &quot;博实结&quot; WHERE asset_id = &quot;${pass_asset_id}&quot;;


</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${pass_asset_id}&quot; and name = &quot;GPS供应商白名单校验&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=PASS&quot;) ==-1 ||
	(
		result.indexOf(&quot;有源GPS厂商:[博实结],在白名单里.无源GPS厂商:[博实结],在白名单里.&quot;) ==-1&amp;&amp;
		result.indexOf(&quot;无源GPS厂商:[博实结],在白名单里.有源GPS厂商:[博实结],在白名单里.&quot;) ==-1
	)
	){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【GPS供应商白名单】-不通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【GPS供应商白名单】-准入不通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${fail_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${fail_product_code}&apos;;


UPDATE asset_gps_info SET gps_org_name = &quot;GPS供应商不在白名单&quot; WHERE asset_id = &quot;${fail_asset_id}&quot;;


</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${fail_asset_id}&quot; and name = &quot;GPS供应商白名单校验&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=FAIL&quot;) ==-1||
(
result.indexOf(&quot;有源GPS厂商:[GPS供应商不在白名单],不在白名单里.无源GPS厂商:[GPS供应商不在白名单],不在白名单里.&quot;) ==-1 &amp;&amp;
result.indexOf(&quot;无源GPS厂商:[GPS供应商不在白名单],不在白名单里.有源GPS厂商:[GPS供应商不在白名单],不在白名单里.&quot;) ==-1
)
){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【产品提前结束日-租约结束日期】-通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【产品提前结束日-租约结束日期】-准入通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${pass_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${pass_product_code}&apos;;


UPDATE product_info SET min_pre_due_date = &quot;20191231&quot; WHERE  product_code = &quot;${pass_product_code}&quot;;


UPDATE asset_car_core_info SET tenancy_end_date = &quot;20191201&quot; WHERE  asset_id = &quot;${pass_asset_id}&quot;;


</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${pass_asset_id}&quot; and name = &quot;产品提前结束日-租约结束日期&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=PASS&quot;) ==-1 ||result.indexOf(&quot;产品提前结束日减租约结束日期满足设定天数要求.&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【产品提前结束日-租约结束日期】-不通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【产品提前结束日-租约结束日期】-准入不通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${fail_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${fail_product_code}&apos;;


UPDATE product_info SET min_pre_due_date = &quot;20191201&quot; WHERE  product_code = &quot;${fail_product_code}&quot;;


UPDATE asset_car_core_info SET tenancy_end_date = &quot;20191231&quot; WHERE  asset_id = &quot;${fail_asset_id}&quot;;



</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${fail_asset_id}&quot; and name = &quot;产品提前结束日-租约结束日期&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=FAIL&quot;) ==-1 ||result.indexOf(&quot;产品提前结束日减租约结束日期不满足设定天数要求.&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【提车单验证】-通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【提车单验证】-准入通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${pass_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${pass_product_code}&apos;;


UPDATE asset_car_back_up_info SET pick_up_file_path = &quot;/upload/pickFile/dscpickup.pdf&quot; WHERE asset_id = &quot;${pass_asset_id}&quot;;


UPDATE asset_car_core_info SET vin_code = &quot;LBECFAHBXFZ282138&quot;  WHERE asset_id = &quot;${pass_asset_id}&quot;;


UPDATE asset_car_core_info SET plate_number = &quot;桂AT825X&quot;  WHERE asset_id = &quot;${pass_asset_id}&quot;;


</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${pass_asset_id}&quot; and name = &quot;提车单验证&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=PASS&quot;) ==-1 ||result.indexOf(&quot;description=提车单中存在vincode: [LBECFAHBXFZ282138]和车牌号: [桂AT825X].&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【提车单验证】-不通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【提车单验证】-准入不通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${fail_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${fail_product_code}&apos;;


UPDATE asset_car_back_up_info SET pick_up_file_path = &quot;/upload/pickFile/dscpickup.pdf&quot; WHERE asset_id = &quot;${fail_asset_id}&quot;;


UPDATE asset_car_core_info SET vin_code = &quot;LBECFAHBXFZ282139&quot;  WHERE asset_id = &quot;${fail_asset_id}&quot;;


UPDATE asset_car_core_info SET plate_number = &quot;桂AT825X&quot;  WHERE asset_id = &quot;${fail_asset_id}&quot;;


</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${fail_asset_id}&quot; and name = &quot;提车单验证&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="false">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=FAIL&quot;) ==-1 ||result.indexOf(&quot;description=提车单中不存在vincode: [LBECFAHBXFZ282139]或车牌号: [桂AT825X].&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【最后一期月供应还日期小于租约到期日验证】-通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【最后一期月供应还日期小于租约到期日验证】-准入通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${pass_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${pass_product_code}&apos;;


UPDATE repay_plan SET repay_date = &quot;20191201&quot; WHERE asset_id = &quot;${pass_asset_id}&quot; ORDER BY repay_date DESC LIMIT 1;


UPDATE asset_car_core_info SET tenancy_end_date = &quot;20191231&quot;  WHERE asset_id = &quot;${pass_asset_id}&quot;;





</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${pass_asset_id}&quot; and name = &quot;最后一期月供应还日期小于租约到期日验证&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=PASS&quot;) ==-1 ||
	result.indexOf(&quot;description=最后一期月供应还日小于租约到期日验证：最后一期月供应还日20191201 应小于租约到期日20191231,验证通过&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【最后一期月供应还日期小于租约到期日验证】-不通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【最后一期月供应还日期小于租约到期日验证】-准入不通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${fail_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${fail_product_code}&apos;;


UPDATE repay_plan SET repay_date = &quot;20191231&quot; WHERE asset_id = &quot;${fail_asset_id}&quot; ORDER BY repay_date DESC LIMIT 1;


UPDATE asset_car_core_info SET tenancy_end_date = &quot;20191201&quot;  WHERE asset_id = &quot;${fail_asset_id}&quot;;


</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${fail_asset_id}&quot; and name = &quot;最后一期月供应还日期小于租约到期日验证&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=FAIL&quot;) ==-1 ||result.indexOf(&quot;description=最后一期月供应还日小于租约到期日验证：最后一期月供应还日20191231 应小于租约到期日20191201,验证不通过&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【剩余期数区间】-通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【剩余期数区间】-准入通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${pass_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${pass_product_code}&apos;;


DELETE  FROM repay_plan WHERE asset_id = &quot;${pass_asset_id}&quot;;


insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;0&apos;, &apos;${fund_party}&apos;, &apos;f44dee53905943b2ae700e21ed88ada1&apos;, &apos;WAITING&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;12&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;YES&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NOT_VERIFY&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;0&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${pass_permission_id}&apos;, &apos;${pass_asset_id}&apos;, &apos;20191201&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;0&apos;, &apos;${fund_party}&apos;, &apos;7acd2f7db4154f209529bad38d4af632&apos;, &apos;WAITING&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;YES&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NOT_VERIFY&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;0&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${pass_permission_id}&apos;, &apos;${pass_asset_id}&apos;, &apos;20190111&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;0&apos;, &apos;${fund_party}&apos;, &apos;90d0e284050e4a90b7111394287ca3e3&apos;, &apos;WAITING&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;10&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;YES&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NOT_VERIFY&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;0&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${pass_permission_id}&apos;, &apos;${pass_asset_id}&apos;, &apos;20181211&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;0&apos;, &apos;${fund_party}&apos;, &apos;81653add82f642e6bbdba89902c48ba4&apos;, &apos;WAITING&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;9&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;YES&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NOT_VERIFY&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;0&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${pass_permission_id}&apos;, &apos;${pass_asset_id}&apos;, &apos;20181111&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;0&apos;, &apos;${fund_party}&apos;, &apos;4b89ed60206f416f8f95c10b4b87fe45&apos;, &apos;WAITING&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;8&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;YES&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NOT_VERIFY&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;0&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${pass_permission_id}&apos;, &apos;${pass_asset_id}&apos;, &apos;20181011&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11000.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;0&apos;, &apos;${fund_party}&apos;, &apos;4b604a8a56a44e8c89987b8b96f59d86&apos;, &apos;WAITING&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;7&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;YES&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NOT_VERIFY&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;0&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${pass_permission_id}&apos;, &apos;${pass_asset_id}&apos;, &apos;20180911&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11000.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;0&apos;, &apos;${fund_party}&apos;, &apos;4489302fc39c4c5b82e0c43d260187ca&apos;, &apos;WAITING&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;6&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;YES&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NOT_VERIFY&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;0&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${pass_permission_id}&apos;, &apos;${pass_asset_id}&apos;, &apos;20180811&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11000.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;0&apos;, &apos;${fund_party}&apos;, &apos;d76fd11bd9f34e58812319c38b2f9ef7&apos;, &apos;WAITING&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;5&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;YES&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NOT_VERIFY&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;0&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${pass_permission_id}&apos;, &apos;${pass_asset_id}&apos;, &apos;20180711&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11000.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;0&apos;, &apos;${fund_party}&apos;, &apos;b1217dab470645a0b143320453072f39&apos;, &apos;WAITING&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;4&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;YES&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NOT_VERIFY&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;0&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${pass_permission_id}&apos;, &apos;${pass_asset_id}&apos;, &apos;20180611&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11000.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;0&apos;, &apos;${fund_party}&apos;, &apos;3d52ced97a224589b7755111d51b89cp&apos;, &apos;WAITING&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;3&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;YES&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NOT_VERIFY&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;0&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${pass_permission_id}&apos;, &apos;${pass_asset_id}&apos;, &apos;20180511&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11000.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;0&apos;, &apos;${fund_party}&apos;, &apos;f4d14f3d3ec84e19b5c4bca6c4ae153c&apos;, &apos;WAITING&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;2&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;YES&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NOT_VERIFY&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;0&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${pass_permission_id}&apos;, &apos;${pass_asset_id}&apos;, &apos;20180411&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11000.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;20180311&apos;, &apos;${fund_party}&apos;, &apos;02de2b4d89904cb394d5d59f4953c68a&apos;, &apos;REPAID&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;1&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;NO&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NO_NEED&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;20180311&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${pass_permission_id}&apos;, &apos;${pass_asset_id}&apos;, &apos;20180311&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11000.00&apos;);






</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${pass_asset_id}&quot; and name = &quot;剩余期数区间&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=PASS&quot;) ==-1 ||result.indexOf(&quot;description=剩余期数: [11]符合准入标准&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【剩余期数区间】-不通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【剩余期数区间】-准入不通过数据" enabled="false">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${fail_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${fail_product_code}&apos;;


DELETE  FROM repay_plan WHERE asset_id = &quot;${fail_asset_id}&quot;;


insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;0&apos;, &apos;${fund_party}&apos;, &apos;f44dee53905943b2ae700e21ed88ada5&apos;, &apos;WAITING&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;12&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;YES&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NOT_VERIFY&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;0&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${fail_permission_id}&apos;, &apos;${fail_asset_id}&apos;, &apos;20191201&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;0&apos;, &apos;${fund_party}&apos;, &apos;7acd2f7db4154f209529bad38d4af63b&apos;, &apos;WAITING&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;YES&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NOT_VERIFY&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;0&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${fail_permission_id}&apos;, &apos;${fail_asset_id}&apos;, &apos;20190111&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;0&apos;, &apos;${fund_party}&apos;, &apos;90d0e284050e4a90b7111394287ca3ee&apos;, &apos;WAITING&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;10&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;YES&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NOT_VERIFY&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;0&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${fail_permission_id}&apos;, &apos;${fail_asset_id}&apos;, &apos;20181211&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;20181111&apos;, &apos;${fund_party}&apos;, &apos;81653add82f642e6bbdba89902c48ba1&apos;, &apos;REPAID&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;9&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;NO&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NO_NEED&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;20181111&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${fail_permission_id}&apos;, &apos;${fail_asset_id}&apos;, &apos;20181111&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;20181011&apos;, &apos;${fund_party}&apos;, &apos;4b89ed60206f416f8f95c10b4b87fe4a&apos;, &apos;REPAID&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;8&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;NO&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NO_NEED&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;20181011&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${fail_permission_id}&apos;, &apos;${fail_asset_id}&apos;, &apos;20181011&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11000.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;20180911&apos;, &apos;${fund_party}&apos;, &apos;4b604a8a56a44e8c89987b8b96f59d83&apos;, &apos;REPAID&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;7&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;NO&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NO_NEED&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;20180911&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${fail_permission_id}&apos;, &apos;${fail_asset_id}&apos;, &apos;20180911&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11000.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;20180811&apos;, &apos;${fund_party}&apos;, &apos;4489302fc39c4c5b82e0c43d260187c7&apos;, &apos;REPAID&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;6&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;NO&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NO_NEED&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;20180811&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${fail_permission_id}&apos;, &apos;${fail_asset_id}&apos;, &apos;20180811&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11000.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;20180711&apos;, &apos;${fund_party}&apos;, &apos;d76fd11bd9f34e58812319c38b2f9ef9&apos;, &apos;REPAID&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;5&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;NO&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NO_NEED&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;20180711&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${fail_permission_id}&apos;, &apos;${fail_asset_id}&apos;, &apos;20180711&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11000.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;20180611&apos;, &apos;${fund_party}&apos;, &apos;b1217dab470645a0b143320453072f36&apos;, &apos;REPAID&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;4&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;NO&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NO_NEED&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;20180611&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${fail_permission_id}&apos;, &apos;${fail_asset_id}&apos;, &apos;20180611&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11000.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;20180511&apos;, &apos;${fund_party}&apos;, &apos;3d52ced97a224589b7755111d51b89c8&apos;, &apos;REPAID&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;3&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;NO&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NO_NEED&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;20180511&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${fail_permission_id}&apos;, &apos;${fail_asset_id}&apos;, &apos;20180511&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11000.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;20180411&apos;, &apos;${fund_party}&apos;, &apos;f4d14f3d3ec84e19b5c4bca6c4ae153b&apos;, &apos;REPAID&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;2&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;NO&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NO_NEED&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;20180411&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${fail_permission_id}&apos;, &apos;${fail_asset_id}&apos;, &apos;20180411&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11000.00&apos;);
insert into `wdy_trunk`.`repay_plan` ( `finish_fact_repay_date`, `fund_party`, `id`, `repay_status`, `fact_repay_poundage`, `repay_poundage`, `term_no`, `fact_repay_interest`, `create_date_time`, `verified_amount_after_buy_back`, `is_in_financing`, `name_instalments_amount`, `fact_benefit`, `fact_repay_amount`, `left_principal`, `fact_repay_principal`, `margin_amount`, `max_overdue_days`, `repay_amount`, `asset_from`, `verify_status`, `preend_amount`, `repay_interest`, `has_redundancy_amount_back_flag`, `fact_repay_other_change`, `imp_clear_date`, `first_fact_repay_date`, `benefit_type`, `penalty_interst`, `asset_repay_type`, `benefit`, `permission_group_id`, `asset_id`, `repay_date`, `repay_other_change`, `verified_amount`, `repay_principal`) values ( &apos;20180311&apos;, &apos;${fund_party}&apos;, &apos;02de2b4d89904cb394d5d59f4953c684&apos;, &apos;REPAID&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;1&apos;, &apos;0.00&apos;, &apos;2019-01-16 16:31:53&apos;, &apos;0.00&apos;, &apos;NO&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;11500.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;11500.00&apos;, &apos;DSC&apos;, &apos;NO_NEED&apos;, &apos;0.00&apos;, &apos;500.00&apos;, &apos;NO&apos;, &apos;0.00&apos;, &apos;0&apos;, &apos;20180311&apos;, &apos;RETURN_CASH&apos;, &apos;0.00&apos;, &apos;INSTALMENT&apos;, &apos;500.00&apos;, &apos;${fail_permission_id}&apos;, &apos;${fail_asset_id}&apos;, &apos;20180311&apos;, &apos;0.00&apos;, &apos;0.00&apos;, &apos;11000.00&apos;);





</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="false">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${fail_asset_id}&quot; and name = &quot;剩余期数区间&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=FAIL&quot;) ==-1 ||result.indexOf(&quot;description=剩余期数: [3]不符合准入标准&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【车辆与订单的对应性校验-通用】-通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【车辆与订单的对应性校验通用】-准入通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${pass_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${pass_product_code}&apos;;


UPDATE asset_car_core_info SET vin_code = &quot;${pass_vin_code}&quot; WHERE asset_id = &quot;${pass_asset_id}&quot;;



</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${pass_asset_id}&quot; and name = &quot;车辆与订单的对应性校验&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=PASS&quot;) ==-1 ||result.indexOf(&quot;description=Vincode: [${pass_vin_code}]订单还未存在,符合准入标准.&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【车辆与订单的对应性校验-通用】-不通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询在池资产中已有的一个VinCode" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT acci.vin_code FROM asset_base_info abi
JOIN asset_car_core_info acci ON abi.id = acci.asset_id
WHERE abi.asset_status = &quot;HAVE_IN_POOL&quot; LIMIT 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">fail_vin_code</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【车辆与订单的对应性校验-通用】-准入不通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${fail_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${fail_product_code}&apos;;


UPDATE asset_car_core_info SET vin_code = &quot;${fail_vin_code_1}&quot;  WHERE asset_id = &quot;${fail_asset_id}&quot;;




</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${fail_asset_id}&quot; and name = &quot;车辆与订单的对应性校验&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=FAIL&quot;) ==-1 ||result.indexOf(&quot;description=Vincode: [${fail_vin_code_1}]订单已存在.&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【承租人与订单的对应性校验-通用】-通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【承租人与订单的对应性校验-通用】-准入通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${pass_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${pass_product_code}&apos;;


UPDATE asset_base_info SET cert_no = &quot;${pass_cert_no}&quot; WHERE id = &quot;${pass_asset_id}&quot;;



</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${pass_asset_id}&quot; and name = &quot;承租人与订单的对应性校验&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=PASS&quot;) ==-1 ||result.indexOf(&quot;description=同一个人未租用多辆车.&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【承租人与订单的对应性校验-通用】-不通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询在池资产中已有的一个VinCode" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">SELECT abi.cert_no FROM asset_base_info abi
JOIN asset_car_core_info acci ON abi.id = acci.asset_id
WHERE abi.asset_status = &quot;HAVE_IN_POOL&quot; LIMIT 1;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames">fail_cert_no</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【承租人与订单的对应性校验-通用】-准入不通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${fail_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${fail_product_code}&apos;;


UPDATE asset_base_info SET cert_no = &quot;${fail_cert_no_1}&quot;  WHERE id = &quot;${fail_asset_id}&quot;;




</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${fail_asset_id}&quot; and name = &quot;承租人与订单的对应性校验&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=FAIL&quot;) ==-1 ||result.indexOf(&quot;description=同一个人租用了多辆车.&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【厂商指导价区间(元)】-通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="插入车型信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="brandName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">TEST大众LXX</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">brandName</stringProp>
              </elementProp>
              <elementProp name="seriesName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">TEST速度</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">seriesName</stringProp>
              </elementProp>
              <elementProp name="modelName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">TEST 2017款 1.5L 手动豪华智能型</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">modelName</stringProp>
              </elementProp>
              <elementProp name="year" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2017</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">year</stringProp>
              </elementProp>
              <elementProp name="guidePrice" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">100000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">guidePrice</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/thirdPartyData/vehicleManage/vehicles/create</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【厂商指导价区间(元)】-准入通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${pass_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${pass_product_code}&apos;;

UPDATE asset_car_core_info SET brand_name = &quot;TEST大众LXX&quot;,series_name = &quot;TEST速度&quot;,model_name = &quot;TEST2017款 1.5L 手动豪华智能型&quot; 
WHERE asset_id = &quot;${pass_asset_id}&quot;;

UPDATE asset_car_core_info SET guide_price = 90000 WHERE asset_id = &quot;${pass_asset_id}&quot;;









</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${pass_asset_id}&quot; and name = &quot;厂商指导价区间(元)&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=PASS&quot;) ==-1 ||result.indexOf(&quot;description=厂商指导价: [90000.000000], 基础指导价: [100000.000000]符合准入标准.&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="删除本次插入的车型信息" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">DELETE FROM car_info WHERE brand_name = &quot;TEST大众LXX&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【厂商指导价区间(元)】-不通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="插入车型信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="brandName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">TEST大众LXX</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">brandName</stringProp>
              </elementProp>
              <elementProp name="seriesName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">TEST速度</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">seriesName</stringProp>
              </elementProp>
              <elementProp name="modelName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">TEST 2017款 1.5L 手动豪华智能型</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">modelName</stringProp>
              </elementProp>
              <elementProp name="year" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2017</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">year</stringProp>
              </elementProp>
              <elementProp name="guidePrice" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">100000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">guidePrice</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/thirdPartyData/vehicleManage/vehicles/create</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【厂商指导价区间(元)】-准入不通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${fail_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${fail_product_code}&apos;;

UPDATE asset_car_core_info SET brand_name = &quot;TEST大众LXX&quot;,series_name = &quot;TEST速度&quot;,model_name = &quot;TEST2017款 1.5L 手动豪华智能型&quot; 
WHERE asset_id = &quot;${fail_asset_id}&quot;;

UPDATE asset_car_core_info SET guide_price = 1000000 WHERE asset_id = &quot;${fail_asset_id}&quot;;
</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${fail_asset_id}&quot; and name = &quot;厂商指导价区间(元)&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=FAIL&quot;) ==-1 ||result.indexOf(&quot;description=厂商指导价: [1000000.000000]不符合准入标准.&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="删除本次插入的车型信息" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">DELETE FROM car_info WHERE brand_name = &quot;TEST大众LXX&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【厂商指导价浮动区间】-通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="插入车型信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="brandName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">TEST大众LXX</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">brandName</stringProp>
              </elementProp>
              <elementProp name="seriesName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">TEST速度</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">seriesName</stringProp>
              </elementProp>
              <elementProp name="modelName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">TEST 2017款 1.5L 手动豪华智能型</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">modelName</stringProp>
              </elementProp>
              <elementProp name="year" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2017</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">year</stringProp>
              </elementProp>
              <elementProp name="guidePrice" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">100000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">guidePrice</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/thirdPartyData/vehicleManage/vehicles/create</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【厂商指导价浮动区间】-准入通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${pass_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${pass_product_code}&apos;;


UPDATE asset_car_core_info SET brand_name = &quot;TEST大众LXX&quot;,series_name = &quot;TEST速度&quot;,model_name = &quot;TEST2017款 1.5L 手动豪华智能型&quot; 
WHERE asset_id = &quot;${pass_asset_id}&quot;;

UPDATE asset_car_core_info SET guide_price = 100000 WHERE asset_id = &quot;${pass_asset_id}&quot;;









</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${pass_asset_id}&quot; and name = &quot;厂商指导价浮动区间&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=PASS&quot;) ==-1 ||result.indexOf(&quot;description=厂商指导价与基础指导价差异: [0.000000]符合准入标准.&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="删除本次插入的车型信息" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">DELETE FROM car_info WHERE brand_name = &quot;TEST大众LXX&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【厂商指导价浮动区间】-不通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="插入车型信息" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments">
              <elementProp name="brandName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">TEST大众LXX</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">brandName</stringProp>
              </elementProp>
              <elementProp name="seriesName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">TEST速度</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">seriesName</stringProp>
              </elementProp>
              <elementProp name="modelName" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">TEST 2017款 1.5L 手动豪华智能型</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">modelName</stringProp>
              </elementProp>
              <elementProp name="year" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">2017</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">year</stringProp>
              </elementProp>
              <elementProp name="guidePrice" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">100000</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">true</boolProp>
                <stringProp name="Argument.name">guidePrice</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/thirdPartyData/vehicleManage/vehicles/create</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree/>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【厂商指导价浮动区间】-准入不通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${fail_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${fail_product_code}&apos;;

UPDATE asset_car_core_info SET brand_name = &quot;TEST大众LXX&quot;,series_name = &quot;TEST速度&quot;,model_name = &quot;TEST2017款 1.5L 手动豪华智能型&quot; 
WHERE asset_id = &quot;${fail_asset_id}&quot;;


UPDATE asset_car_core_info SET guide_price = 200000 WHERE asset_id = &quot;${fail_asset_id}&quot;;
</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${fail_asset_id}&quot; and name = &quot;厂商指导价浮动区间&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=FAIL&quot;) ==-1 ||result.indexOf(&quot;description=厂商指导价与基础指导价差异: [1.000000]不符合准入标准.&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="删除本次插入的车型信息" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="query">DELETE FROM car_info WHERE brand_name = &quot;TEST大众LXX&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree/>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【融资申请限额校验(元)】-通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【融资申请限额校验(元)】-准入通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${pass_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${pass_product_code}&apos;;


UPDATE product_info SET request_amount = 100000 WHERE product_code =&apos;${pass_product_code}&apos;;


</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message">断言失败时候输出&quot;断言失败&quot;</stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${pass_asset_id}&quot; and name = &quot;融资申请限额校验(元)&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=PASS&quot;) ==-1 ||result.indexOf(&quot;description=融资申请金额[100000.000000]低于限额&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="【融资申请限额校验(元)】-不通过" enabled="false">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="循环控制器" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
      </ThreadGroup>
      <hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="【融资申请限额校验(元)】-准入不通过数据" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="query">
UPDATE asset_base_info SET asset_status=&apos;WAIT_AUDIT&apos;,push_status=&apos;WAIT_PUSH_CHECK&apos; WHERE  product_code =&apos;${fail_product_code}&apos;;


UPDATE product_info SET product_status=&apos;WAITING_AUDIT&apos;,create_date_time=&apos;2018-11-05 10:10:31&apos; WHERE product_code=&apos;${fail_product_code}&apos;;


UPDATE product_info SET request_amount = 1000000 WHERE product_code =&apos;${fail_product_code}&apos;;


</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="queryType">Update Statement</stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
          <stringProp name="resultVariable"></stringProp>
          <stringProp name="variableNames"></stringProp>
        </JDBCSampler>
        <hashTree/>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="执行准入接口" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="用户定义的变量" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">/timetask/assetManage/pushAssetInfoToRiskCheck</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="响应断言" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="-984400366">&quot;data&quot;:&quot;&quot;,&quot;resultCode&quot;:&quot;SUCCESS&quot;,&quot;resultMsg&quot;:&quot;成功&quot;</stringProp>
            </collectionProp>
            <stringProp name="Assertion.custom_message"></stringProp>
            <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
            <boolProp name="Assertion.assume_success">false</boolProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
        <JDBCSampler guiclass="TestBeanGUI" testclass="JDBCSampler" testname="查询准入结果并进行断言" enabled="true">
          <stringProp name="dataSource">wdy_trunk</stringProp>
          <stringProp name="queryType">Select Statement</stringProp>
          <stringProp name="query">select * from risk_rule_result where subject_id = &quot;${fail_asset_id}&quot; and name = &quot;融资申请限额校验(元)&quot; ;</stringProp>
          <stringProp name="queryArguments"></stringProp>
          <stringProp name="queryArgumentsTypes"></stringProp>
          <stringProp name="variableNames"></stringProp>
          <stringProp name="resultVariable">result</stringProp>
          <stringProp name="queryTimeout"></stringProp>
          <stringProp name="resultSetHandler">Store as String</stringProp>
        </JDBCSampler>
        <hashTree>
          <BeanShellAssertion guiclass="BeanShellAssertionGui" testclass="BeanShellAssertion" testname="BeanShell断言" enabled="true">
            <stringProp name="BeanShellAssertion.query">String result = vars.get(&quot;result&quot;);

log.info(&quot;=====start=====&quot;);

log.info(result);

if (result.indexOf(&quot;status=FAIL&quot;) ==-1 ||result.indexOf(&quot;description=融资申请金额[1000000.000000]超过限额&quot;) ==-1){
	Failure = true;
	FailureMessage = &quot;准入结果不符合预期值&quot;;
	return;
	}
	
</stringProp>
            <stringProp name="BeanShellAssertion.filename"></stringProp>
            <stringProp name="BeanShellAssertion.parameters"></stringProp>
            <boolProp name="BeanShellAssertion.resetInterpreter">false</boolProp>
          </BeanShellAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
